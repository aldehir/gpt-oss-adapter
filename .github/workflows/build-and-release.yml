name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            artifact_name: gpt-oss-adapter-linux-amd64
            asset_name: gpt-oss-adapter-linux-amd64
          - goos: darwin
            goarch: amd64
            artifact_name: gpt-oss-adapter-darwin-amd64
            asset_name: gpt-oss-adapter-darwin-amd64
          - goos: darwin
            goarch: arm64
            artifact_name: gpt-oss-adapter-darwin-arm64
            asset_name: gpt-oss-adapter-darwin-arm64
          - goos: windows
            goarch: amd64
            artifact_name: gpt-oss-adapter-windows-amd64.exe
            asset_name: gpt-oss-adapter-windows-amd64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.1'

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        VERSION=${GITHUB_REF_NAME#v}
        if [[ "$GITHUB_REF" != refs/tags/* ]]; then
          VERSION="dev-${GITHUB_SHA::8}"
        fi
        go build -ldflags="-s -w -X main.version=${VERSION}" -o ${{ matrix.artifact_name }} .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.artifact_name }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/gpt-oss-adapter-linux-amd64/gpt-oss-adapter-linux-amd64
          artifacts/gpt-oss-adapter-darwin-amd64/gpt-oss-adapter-darwin-amd64
          artifacts/gpt-oss-adapter-darwin-arm64/gpt-oss-adapter-darwin-arm64
          artifacts/gpt-oss-adapter-windows-amd64/gpt-oss-adapter-windows-amd64.exe
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
